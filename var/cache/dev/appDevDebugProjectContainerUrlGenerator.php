<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevDebugProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = [
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_open_file' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_twig_error_test' => array (  0 =>   array (    0 => 'code',    1 => '_format',  ),  1 =>   array (    '_controller' => 'twig.controller.preview_error:previewErrorPageAction',    '_format' => 'html',  ),  2 =>   array (    'code' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'code',    ),    2 =>     array (      0 => 'text',      1 => '/_error',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'follow_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FollowBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/follow/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'follower_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FollowBundle\\Controller\\FollowerController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/follow/follower/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'follower_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FollowBundle\\Controller\\FollowerController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/follow/follower/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'follower_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FollowBundle\\Controller\\FollowerController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/follow/follower',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'follower_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FollowBundle\\Controller\\FollowerController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/follow/follower',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'follower_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FollowBundle\\Controller\\FollowerController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/follow/follower',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AskBundle_homeask_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask/AskBundle/homeask//',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AskBundle_homeask_index1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::index1Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask/AskBundle/homeask//index1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AskBundle_homeask_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask/AskBundle/homeask//new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AskBundle_homeask_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ask/AskBundle/homeask/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AskBundle_homeask_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/ask/AskBundle/homeask/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AskBundle_homeask_delete' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask/AskBundle/homeask//delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AskBundle_homeask_block' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::blockAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask/AskBundle/homeask//newblock',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'AskBundle_homeask_deblock' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::deblockAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask/AskBundle/homeask//newdeblock',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ask_default_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'follow_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FollowBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/follow1/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ask_homep' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ask1/askhomep',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ask_homep1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::index1Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask1/askhomep1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ask_showask2' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask1/askhomepp1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ask_deleteask' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::deleteEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ask1/askdel',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ask_make' => array (  0 =>   array (    0 => 'msg1',  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::faireaskAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'msg1',    ),    1 =>     array (      0 => 'text',      1 => '/ask1/makeask',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ask_make1' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::new7Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask1/makeask1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'newfolow' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FollowBundle\\Controller\\FollowerController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask1/newfolow',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deletefolow' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FollowBundle\\Controller\\FollowerController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask1/deletefolow',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'block_make' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::blockAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask1/block',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'block_go' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::deblockAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask1/deblock',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_go' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::show2Action',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ask1/show1',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'searchprofil' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::searrchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask1/searchprofil',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'searchnotif' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\AskController::searrchyyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask1/searchnotif',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affiche_ask' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\Mobile33Controller::afficheaskMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask1/afficheaskMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'findask' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\Mobile33Controller::allAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ask1/findask1996',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'neeeewask' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\Mobile33Controller::newMobileaskAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask1/neeewask',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleeeteask' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\Mobile33Controller::suppppAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ask1/deleeeeeteask',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleefoloowteask' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\Mobile33Controller::supfolowAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask1/deleeeeetefolowask',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'newfoloowteask' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\Mobile33Controller::newfolowmobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask1/neeewfolowask',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'veriffoloowteask' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AskBundle\\Controller\\Mobile33Controller::verifierfolowMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ask1/veriiffolowask',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'forum_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\SujetController::homeSujetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/homeSujet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'forum_recherche' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\SujetController::rechercheAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/recherche',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\SujetController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'forum_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\SujetController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'forum_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\SujetController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_comment_client' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\CommentaireSuController::showCommentClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/showCommentClient',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteC' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\CommentaireSuController::deleteCAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/deleteC',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'comment_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\CommentaireSuController::updateCommentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/updateComment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'comment_create' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\CommentaireSuController::createCommentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/createComment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_comment_admin' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\CommentaireSuController::showCommentAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/showCommentAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'comment_create_admin' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\CommentaireSuController::createCommentAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/createCommentAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'comment_update_admin' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\CommentaireSuController::updateCommentAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/updateCommentAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_categorie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\CategorieSuController::showCategorieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/showCategorie',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_categorie' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\CategorieSuController::deleteCatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/deleteCat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_categorie' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\CategorieSuController::updateCatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/updateCat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_categorie' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\CategorieSuController::createCatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/createCat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'forum_rechercheC' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\SujetController::rechercheCAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/rechercheC',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_sujet_Admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\SujetController::createsujetAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/createsujetAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_sujet_Admin' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\SujetController::updatesujetAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/updatesujetAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'chart_stat' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\ChartSuController::chartAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/chart',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'my_sujet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\SujetController::mySubjectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/mySubject',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'chart_statClient' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\ChartSuController::chartClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/chartClient',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affiche_mobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\MobileController::afficheSujetMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/mobsujet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajout_mobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\MobileController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/mobsujetadd',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'find_mobile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\MobileController::findAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/mobsujetfind',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supp_mobile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\MobileController::suppAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/mobsujetsupp',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modif_mobile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\MobileController::modifAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/mobsujetmodif',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affiche_commmobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\MobileController::affichecommentaireMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/mobcomm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'find_commentmobile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\MobileController::findcommAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/findcomm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajout_commmobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\MobileController::newcommAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/newcomm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'supp_commmobile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\MobileController::suppcommAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/suppcomm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modif_commmobile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\MobileController::modifcommAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/modifcomm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'find_commsujetmobile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\MobileController::findcommsujetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/forum/findcommsujet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affichecateg_mobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ForumBundle\\Controller\\MobileController::afficheCategMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/forum/afficheCategMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'comment_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\CommentaireController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pub/comment/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'comment_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\CommentaireController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/pub/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'comment_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\CommentaireController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pub/comment/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'comment_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\CommentaireController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/pub/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'comment_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\CommentaireController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/pub/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'commentA_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\CommentaireController::indexAdminCAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pub/comment/AdminC',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'publication_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pub/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pub_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PublicationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pub/pub/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pub_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PublicationController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/pub/pub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pub_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PublicationController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pub/pub/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pub_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PublicationController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/pub/pub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pub_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PublicationController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/pub/pub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'pubA_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\PublicationController::indexAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pub/pub/Admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'affiche_mobiles' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\Mobile22Controller::affichePubMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pub/affichemobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'find_mobiles' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\Mobile22Controller::findmobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/pub/findmobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_mobiles' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\Mobile22Controller::newmobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pub/newmobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sup_mobiles' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\Mobile22Controller::suppubAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pub/suppub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modif_mobiles' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'PublicationBundle\\Controller\\Mobile22Controller::modifpubAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pub/modifpub',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'product_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/product/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/product/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_product' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::showProductAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/product/showproduct',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/product/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_product' => array (  0 =>   array (    0 => 'productid',  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'productid',    ),    1 =>     array (      0 => 'text',      1 => '/product/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_product' => array (  0 =>   array (    0 => 'productid',  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'productid',    ),    1 =>     array (      0 => 'text',      1 => '/product/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_detailedproduct' => array (  0 =>   array (    0 => 'productid',  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::showdetailedProductAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'productid',    ),    1 =>     array (      0 => 'text',      1 => '/product/showdetailedproduct',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_category' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductcategoryController::showCategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/product/showcategory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_category' => array (  0 =>   array (    0 => 'productcatid',  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductcategoryController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'productcatid',    ),    1 =>     array (      0 => 'text',      1 => '/product/deletecategory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_category' => array (  0 =>   array (    0 => 'productcatid',  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductcategoryController::updatecategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'productcatid',    ),    1 =>     array (      0 => 'text',      1 => '/product/updatecategory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'new_category' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductcategoryController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/product/newcategory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_productadmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::adminManagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/product/showproductadmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_detailedproductadmin' => array (  0 =>   array (    0 => 'productid',  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::showdetailedProductadminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'productid',    ),    1 =>     array (      0 => 'text',      1 => '/product/showdetailedproductadmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_productadmin' => array (  0 =>   array (    0 => 'productid',  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::deleteAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'productid',    ),    1 =>     array (      0 => 'text',      1 => '/product/deleteadmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deal_pdf' => array (  0 =>   array (    0 => 'productid',  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\PdfController::newPdfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'productid',    ),    1 =>     array (      0 => 'text',      1 => '/product/dealpdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'index_pdf' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\PdfController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/product/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_detailedproductpdf' => array (  0 =>   array (    0 => 'productid',  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::showdetailedProductpdfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'productid',    ),    1 =>     array (      0 => 'text',      1 => '/product/showdetailedproductpdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_product_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::mobileProductAddAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/product/mobileproduct/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_product_delete' => array (  0 =>   array (    0 => 'productid',  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::mobileProductDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'productid',    ),    1 =>     array (      0 => 'text',      1 => '/product/mobiledeleteproduct',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_allproduct' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::mobilegetAllProductAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/product/mobileshowProduct',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_allproduct1' => array (  0 =>   array (    0 => 'productid',  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::mobilegetOneProductAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'productid',    ),    1 =>     array (      0 => 'text',      1 => '/product/mobonepro',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_allproduct2' => array (  0 =>   array (    0 => 'productid',  ),  1 =>   array (    '_controller' => 'ProductBundle\\Controller\\ProductController::mobilegetProductByUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'productid',    ),    1 =>     array (      0 => 'text',      1 => '/product/mobileProductsbyuser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ticket_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\TicketController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/ticket/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ticket_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\TicketController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/ticket/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ticket_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\TicketController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/ticket/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ticket_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\TicketController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/ticket/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ticket_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\TicketController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/ticket/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_ticket' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\TicketController::showTicketAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/showTicket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_ticket' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\TicketController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ticket/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_ticket' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\TicketController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ticket/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_ticket' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\TicketController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createImage_ticket' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\TicketController::addTicketDBAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/createImage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'findT_ticket' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\MobileController::findAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ticket/findT',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'findTAll_ticket' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\MobileController::findAllAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/findTAll',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_reportissue' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\ReportIssueController::showReportIssueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/showReportIssue',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_reportissue' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\ReportIssueController::deleteCAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ticket/deleteC',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_reportissue' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\ReportIssueController::updateCAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ticket/updateC',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_reportissue' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\ReportIssueController::createCAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/createC',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showA_ticket' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\TicketController::showTicketAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/showTicketAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reactadmin_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\ReactAdminController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/A',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reactadmin_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\ReactAdminController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/showA',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reactadmin_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\ReactAdminController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/newA',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reactadmin_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\ReactAdminController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/editA',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reactadmin_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\ReactAdminController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/deleteA',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'SendMail' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\DefaultController::SendMailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/mail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'showA_reportissue' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\ReportIssueController::showReportIssueAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/showReportIssueAdmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteA_ticket' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\TicketController::deleteAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ticket/deleteA',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteA_reportissue' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\ReportIssueController::deleteCAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ticket/deleteCA',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updateA_reportissue' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\ReportIssueController::updateCAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ticket/updateCA',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'createA_reportissue' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\ReportIssueController::createCAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/createCA',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'allMobi' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\MobileController::allMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/allMobi',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'deleteMobile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\MobileController::deleteMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ticket/deleteMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'newMobile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\MobileController::newMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ticket/newMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'updateMobile' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'TicketBundle\\Controller\\MobileController::updateMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/ticket/updateMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'esprit_api_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EspritApiBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/esprit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'all' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'EspritApiBundle\\Controller\\TaskController::allAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/tasks/all',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'user_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UserBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'home_event' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::homeEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/homeEvent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'show_event' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::showEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/showEvent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_detail' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::showEventDetailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/showEventDetail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modify_event' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::updateEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/modifyevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_event' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::addEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/addEvent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'modify_eventDB' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::updateEventDBAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/modifyevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_eventDB' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::addEventDBAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/addEventDB',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_event_location' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::addEventLocationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/addEventlocation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'add_event_locationdb' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::addEventLocationDBAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/addEventlocationdb',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'event_owner' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::eventByOwnerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/mylistevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_space' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::adminManagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/adminevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_admin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::adminadminManagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/adminadminevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'my_event' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::myEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/userevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_event' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::deleteEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/deleteevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reserve_event' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::reserveEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'search_event' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::searchEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/searchres',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ajax_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::searchDBAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/searchreAjax',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'reservation_card' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::reservationCardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/reservationCard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_reservation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::deletereservationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/deletereservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mymy_reservation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::reservationByEventUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/reservationreservation/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_event_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::mobileEventAddAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/mobileevent/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_allevent' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::mobilegetAllEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/mobileshowEvents',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_allevent1' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::mobilegetOneEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/mobileshowEvents',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_statevent' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::mobilegetStatEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/mobilestatEvents',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_allevent2' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::mobilegetEventByUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/mobileEventsbyuser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_event_modify' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::mobileEventModifyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/mobileeventmodify',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_event_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::mobileEventDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/mobiledeleteevent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_eventmastadded' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::mobileEventlastAddedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/mobileeventlastadded',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_locationevnt' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::addEventLocationMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/mobileevent/addLocation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_getlocationevnt' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::getEventLocationMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/mobileeventgetLocation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_modiflocation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::modifieEventLocationMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/mobilemodiflocation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_deletlocation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::deleteEventLocationMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/mobiledeletlocation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::loginMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/mobillogin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_reservation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::showReservationMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/mobilereservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_addreservation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::addReservationMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/mobileaddreservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_deletereservation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::deleteReservationMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/mobiledeletereservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_reservationbyuser' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::reservationByUserMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/event/mobilereservationbyuser',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'mobile_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Mahmoud\\EventBundle\\Controller\\HomeEventController::searchMobileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/searchreMobile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'AppBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.security.controller:logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.profile.controller:editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.registration.controller:confirmedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:requestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:sendEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:checkEmailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'fos_user.resetting.controller:resetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_user.change_password.controller:changePasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_list' => array (  0 =>   array (    0 => 'notifiable',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    1 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_as_seen' => array (  0 =>   array (    0 => 'notifiable',    1 => 'notification',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAsSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notification',    ),    1 =>     array (      0 => 'text',      1 => '/mark_as_seen',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    3 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_as_unseen' => array (  0 =>   array (    0 => 'notifiable',    1 => 'notification',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAsUnSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notification',    ),    1 =>     array (      0 => 'text',      1 => '/mark_as_unseen',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    3 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'notification_mark_all_as_seen' => array (  0 =>   array (    0 => 'notifiable',  ),  1 =>   array (    '_controller' => 'Mgilet\\NotificationBundle\\Controller\\NotificationController::markAllAsSeenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/markAllAsSeen',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'notifiable',    ),    2 =>     array (      0 => 'text',      1 => '/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    ];
        }
    }

    public function generate($name, $parameters = [], $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
